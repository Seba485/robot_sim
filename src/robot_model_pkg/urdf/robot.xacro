<?xml version="1.0"?>
<!--every xacro file start with this line-->
<!--DESCRIPTION OF THE 4-WHEELED ROBOT-->

<robot name= "easy_robot_sim" xmlns:xacro="http://www.ros.org/wiki/xacro"> <!--name of the robot-->

    <!--Body dimension-->
    <xacro:property name="body_link_x_dim" value="1"/>
    <xacro:property name="body_link_y_dim" value="0.6"/>
    <xacro:property name="body_link_z_dim" value="0.2"/>

    <!--Wheel dimensions-->
    <xacro:property name="wheel_link_radius" value="0.15"/>
    <xacro:property name="wheel_link_length" value="0.1"/>
    <xacro:property name="wheel_link_z_location" value="-0.1"/>

    <!--Material density-->
    <xacro:property name="body_density" value="2710.0"/> <!--both made of alluminium-->
    <xacro:property name="wheel_density" value="2710.0"/>

    <!--Pi constant-->
    <xacro:property name="pi_const" value="3.14159265"/>

    <!--Robot body and wheel mass-->
    <xacro:property name="body_mass" value="${body_density*body_link_x_dim*body_link_y_dim*body_link_z_dim}"/>
    <xacro:property name="wheel_mass" value="${wheel_density*wheel_link_radius*wheel_link_radius*pi_const*wheel_link_length}"/>

    <!--Moment of inertia of the wheel-->
    <xacro:property name="Iz_wheel" value="${0.5*wheel_mass*wheel_link_radius*wheel_link_radius}"/>
    <xacro:property name="I_wheel" value="${(1.0/12.0)*wheel_mass*(3.0*wheel_link_radius*wheel_link_radius+wheel_link_length*wheel_link_length)}"/>

    <!--Macro (used in the code)-->
    <xacro:macro name="inertia_wheel">
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="${wheel_mass}"/>
            <inertia ixx="${I_wheel}" ixy="0.0" ixz="0.0" iyy="${I_wheel}" iyz="0.0" izz="${Iz_wheel}"/>
        </inertial>
    </xacro:macro>

    <!--Extra gazebo option and motion control driver in order to be able to pilote the robot-->
    <xacro:include filename="$(find robot_model_pkg)/urdf/robot.gazebo"/>

    <!--Definition of link and joint (required by gazebo, default parent)-->
    <link name="dummy">
    </link>
    <joint name="dummy_joint" type="fixed">
        <parent link="dummy"/>
        <child link="body_link"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </joint>

    <!--Link of the robot body-->
    <link name="body_link">
        <visual>
                <geometry>
                    <box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}"/>
                </geometry>
        </visual>

        <collision>
                <geometry>
                    <box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}"/>
                </geometry>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        </collision>

        <inertial>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <mass value="${body_mass}"/>
            <inertia 
                ixx="${(1/12.0)*body_mass*(body_link_y_dim*body_link_y_dim + body_link_z_dim*body_link_z_dim)}"
                ixy="0.0"
                ixz="0.0"
                iyy="${(1/12.0)*body_mass*(body_link_x_dim*body_link_x_dim + body_link_z_dim*body_link_z_dim)}"
                iyz="0.0"
                izz="${(1/12.0)*body_mass*(body_link_x_dim*body_link_x_dim + body_link_y_dim*body_link_y_dim)}"
            />
        </inertial>
    </link>

    <!--Joint of the wheels-->

    <!--rear rigth wheel-->
    <joint name="wheel1_joint" type="continuous">
        <parent link="body_link"/>
        <child link="wheel1_link"/>
        <origin xyz="${-(body_link_x_dim/2 - wheel_link_radius/2)} ${-(body_link_y_dim/2 + 1.1*wheel_link_length)} ${wheel_link_z_location}" rpy="0.0 0.0 0.0"/>
        <axis xyz="0.0 1.0 0.0"/> <!--wheel rotate along axes y-->
        <limit effort="1000.0" velocity="1000.0"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>
        
    <link name="wheel1_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="1.570795 0.0 0.0"/> <!--1.57 is 90째 in radiant (the cilinder must lean on the soil)-->
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="1.570795 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
        </collision>
        <xacro:inertia_wheel/> <!--using macro can speed up the writing of the code-->
    </link>

    <!--rear left wheel-->
    <joint name="wheel2_joint" type="continuous">
        <parent link="body_link"/>
        <child link="wheel2_link"/>
        <origin xyz="${-(body_link_x_dim/2 - wheel_link_radius/2)} ${+(body_link_y_dim/2 + 1.1*wheel_link_length)} ${wheel_link_z_location}" rpy="0.0 0.0 0.0"/>
        <axis xyz="0.0 1.0 0.0"/> <!--wheel rotate along axes y-->
        <limit effort="1000.0" velocity="1000.0"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>
        
    <link name="wheel2_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="1.570795 0.0 0.0"/> <!--1.57 is 90째 in radiant (the cilinder must lean on the soil)-->
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="1.570795 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
        </collision>
        <xacro:inertia_wheel/> <!--using macro can speed up the writing of the code-->
    </link>

    <!--front rigth wheel-->
    <joint name="wheel3_joint" type="continuous">
        <parent link="body_link"/>
        <child link="wheel3_link"/>
        <origin xyz="${+(body_link_x_dim/2 - wheel_link_radius/2)} ${-(body_link_y_dim/2 + 1.1*wheel_link_length)} ${wheel_link_z_location}" rpy="0.0 0.0 0.0"/>
        <axis xyz="0.0 1.0 0.0"/> <!--wheel rotate along axes y-->
        <limit effort="1000.0" velocity="1000.0"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>
        
    <link name="wheel3_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="1.570795 0.0 0.0"/> <!--1.57 is 90째 in radiant (the cilinder must lean on the soil)-->
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="1.570795 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
        </collision>
        <xacro:inertia_wheel/> <!--using macro can speed up the writing of the code-->
    </link>

    <!--front left wheel-->
    <joint name="wheel4_joint" type="continuous">
        <parent link="body_link"/>
        <child link="wheel4_link"/>
        <origin xyz="${+(body_link_x_dim/2 - wheel_link_radius/2)} ${+(body_link_y_dim/2 + 1.1*wheel_link_length)} ${wheel_link_z_location}" rpy="0.0 0.0 0.0"/>
        <axis xyz="0.0 1.0 0.0"/> <!--wheel rotate along axes y-->
        <limit effort="1000.0" velocity="1000.0"/>
        <dynamics damping="1.0" friction="1.0"/>
    </joint>
        
    <link name="wheel4_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="1.570795 0.0 0.0"/> <!--1.57 is 90째 in radiant (the cilinder must lean on the soil)-->
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="1.570795 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
        </collision>
        <xacro:inertia_wheel/> <!--using macro can speed up the writing of the code-->
    </link>


</robot>